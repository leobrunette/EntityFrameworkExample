@model EntityFrameworkExample.Models.Barrel

@{
	ViewBag.Title = "Add";
}

	<div class="row">
		<div class="col-sm-10">
			<h1>Add</h1>
		</div>
		<div class="col-sm-2">
			@Html.ActionLink("Back", "Index", "Barrel", null, new { @class = "button button-red button-sm" })
		</div>
	</div>
	@using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()
<div>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="form-group">
            <div class="col-sm-4">
                <div class="row">
                    <div class="col-sm-12">
                        <h2>
                            Weight
                        </h2>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-4">
                <div class="row">
                    <div class="col-sm-12">
                        <h2>
                            Radius
                        </h2>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        @Html.EditorFor(model => model.Radius, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Radius, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-4">
                <div class="row">
                    <div class="col-sm-12">
                        <h2>
                            Height
                        </h2>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group">
            <div class="col-sm-4">
                <div class="row">
                    <div class="col-sm-12">
                        <h2>
                            Construction Material
                        </h2>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            listItems.Add(new SelectListItem { Text = "AtlantaPort", Value = "AtlantaPort" });
                            listItems.Add(new SelectListItem { Text = "NewJersyTerminal", Value = "NewJersyTerminal" });
                            listItems.Add(new SelectListItem { Text = "AWS", Value = "AWS" });
                        }

                        @Html.DropDownListFor(model => model.ConstructionMaterial, listItems, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-4">
                <div class="row">
                    <div class="col-sm-12">
                        <h2>
                            Current Location
                        </h2>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        @Html.EditorFor(model => model.CurrentLocation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CurrentLocation, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    <div class="row">
        <div class="form-group dynamic-element" style="display:none">
            @Html.LabelFor(model => model.Contents, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contents, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contents, "", new { @class = "text-danger" })
            </div>
            <p class="delete">Remove Contents</p>
        </div>
    </div>
    <div class="form-container">
        <form class="form-horizontal">
            <fieldset>
                <div class="dynamic-stuff">
                    <!-- Dynamic element will be cloned here -->
                    <!-- You can call clone function once if you want it to show it a first element-->
                </div>

                <!-- Button -->
                <div class="form-group">
                    <div class="row">
                            <p class="add-one">Add Contents</p>
                        <div class="col-md-5"></div>
                        <div class="col-md-6">
                            <button class="button button-sm">Submit</button>
                        </div>
                    </div>
                </div>
            </fieldset>
        </form>
    </div>
</div>
</div>
	}

<script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
<script>
   //Clone the hidden element and shows it
    $('.add-one').click(function () {
       $('.dynamic-element').first().clone().appendTo('.dynamic-stuff').show();
       attach_delete();
   });


   //Attach functionality to delete buttons
   function attach_delete() {
       $('.delete').off();
       $('.delete').click(function () {
           console.log("click");
           $(this).closest('.form-group').remove();
       });
   }
</script>

